var m=`:host\r
{\r
    display: flex; /* needed for reverse ordering */\r
    flex-direction: column;\r
    overflow: auto;\r
}\r
\r
::slotted([data-entry])\r
{\r
    cursor: pointer;\r
    flex-shrink: 0; /* prevents squishing due to the flex display */\r
}\r
\r
::slotted([data-active][data-entry])\r
{\r
    text-decoration: underline;\r
}\r
\r
::slotted([data-entry][data-reversed])\r
{\r
    scale: .98;\r
    opacity: .5;\r
}`;var E="data-reversed",b="data-active",f="data-entry",g="data-timestamp",v=new CSSStyleSheet;v.replaceSync(m);var h="action-history",d=class extends HTMLElement{onBack=async(e,t,i,r,n)=>{};onForward=async(e,t,i,r,n)=>{};get entryAttributeName(){return this.getAttribute("entry-attribute")??f}get activeAttributeName(){return this.getAttribute("active-attribute")??b}get reversedAttributeName(){return this.getAttribute("reversed-attribute")??E}get timestampAttributeName(){return this.getAttribute("timestamp-attribute")??g}#t;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.shadowRoot.adoptedStyleSheets.push(v),this.#t=this.shadowRoot.querySelector("slot"),this.#t.addEventListener("slotchange",e=>{let t=this.#t.assignedElements();this.querySelector(`[${this.activeAttributeName}][${this.timestampAttributeName}]`)?.removeAttribute(this.activeAttributeName);let i=null;for(let r=0;r<t.length;r++){if(t[r].getAttribute(this.entryAttributeName)==null||(i=t[r],t[r].hasAttribute(this.timestampAttributeName)))continue;let n=[...this.querySelectorAll("[data-reversed]")];for(let a=0;a<n.length;a++)n[a].remove();t[r].setAttribute(this.timestampAttributeName,Date.now().toString()),this.updateOrder(),this.dispatchEvent(new CustomEvent("add",{detail:{target:t[r]}}))}this.querySelector(`[${this.activeAttributeName}]`)==null&&i!=null&&i.getAttribute(this.reversedAttributeName)==null&&i.toggleAttribute(this.activeAttributeName,!0)}),this.addEventListener("click",e=>{let t=e.target.closest(`[${this.entryAttributeName}]`);t!=null&&this.activateEntry(t)})}updateOrder(e){if(e=e??this.#t.assignedElements(),this.hasAttribute("reverse"))for(let t=0;t<e.length;t++){let i=this.children.length-t;e[t].tabIndex=i,e[t].style.order=i.toString()}else for(let t=0;t<e.length;t++)e[t].removeAttribute("tabindex"),e[t].style.removeProperty("order")}back(){let e=[...this.children],t=e.find(n=>n.getAttribute(this.activeAttributeName)!=null);if(t==null)return;let i=e.indexOf(t),r=i-1;if(r==-1){new Promise(async n=>{await this.onBack(t,t,[t],r,i),t.toggleAttribute(this.reversedAttributeName,!0),t.removeAttribute(this.activeAttributeName),n()});return}r>=0&&r<e.length&&e[r].click()}forward(){let e=[...this.children],t=e.find(r=>r.getAttribute(this.activeAttributeName)!=null),i=t==null?e.length>0?0:-1:e.indexOf(t)+1;i!=-1&&i<e.length&&e[i].click()}async activateEntry(e){if(e.hasAttribute(this.activeAttributeName)){this.dispatchEvent(new CustomEvent("refresh",{detail:{target:e}}));return}let t=await this.#e(e);this.dispatchEvent(new CustomEvent("activate",{detail:t}))}async#e(e){let t=[...this.children],i=t.find(l=>l.getAttribute(this.activeAttributeName)!=null);i?.removeAttribute(this.activeAttributeName);let r=t.indexOf(e),n=i==null?-1:t.indexOf(i),a=[],o=[];if(n>r)for(let l=n;l>r;l--)a.push(t[l]);else if(n<r)for(let l=n+1;l<=r;l++)o.push(t[l]);else throw new Error("Unable to determine action");let c={target:e,previousActiveEntry:i,toReverse:a,toActivate:o,targetIndex:r,previousActiveEntryIndex:n};if(a.length>0){for(let s=0;s<a.length;s++)a[s].toggleAttribute(this.reversedAttributeName,!0);let l=a[a.length-1];await this.onBack(l,i,a,t.indexOf(l),n)}else if(o.length>0){for(let s=0;s<o.length;s++)o[s].removeAttribute(this.reversedAttributeName);let l=o[o.length-1];await this.onForward(l,i,o,t.indexOf(l),n)}return e.toggleAttribute(this.activeAttributeName,!0),c}async reverseEntry(e){if(e.hasAttribute(this.reversedAttributeName))return;let t=[...this.children],i=t.find(s=>s.getAttribute(this.activeAttributeName)!=null);i?.removeAttribute(this.activeAttributeName);let r=t.indexOf(e),n=i==null?-1:t.indexOf(i),a=[e],o=[];if(r==n){await this.onBack(e,e,[e],r,n),e.toggleAttribute(this.reversedAttributeName,!0),e.removeAttribute(this.activeAttributeName);let s=this.querySelector(`[data-entry]:has(+ [data-timestamp="${e.dataset.timestamp}"])`);s?.toggleAttribute(this.activeAttributeName,!0),this.dispatchEvent(new CustomEvent("reverse",{detail:{target:e,previousActiveEntry:i,toReverse:a,toActivate:o,targetIndex:r,previousActiveEntryIndex:n}}));return}if(n>r)for(let s=n;s>r;s--)a.push(t[s]);else if(n<r)for(let s=n+1;s<=r;s++)o.push(t[s]);else throw new Error("Unable to determine action");let c={target:e,previousActiveEntry:i,toReverse:a,toActivate:o,targetIndex:r,previousActiveEntryIndex:n};if(a.length>0){for(let u=0;u<a.length;u++)a[u].toggleAttribute(this.reversedAttributeName,!0);let s=a[a.length-1];await this.onBack(s,i,a,t.indexOf(s),n)}else if(o.length>0){for(let u=0;u<o.length;u++)o[u].removeAttribute(this.reversedAttributeName);let s=o[o.length-1];await this.onForward(s,i,o,t.indexOf(s),n)}let l=this.querySelector(`[data-entry]:has(+ [data-timestamp="${e.dataset.timestamp}"])`);l?.toggleAttribute(this.activeAttributeName,!0),e.removeAttribute(this.activeAttributeName),this.dispatchEvent(new CustomEvent("reverse",{detail:c}))}static observedAttributes=["reverse"];attributeChangedCallback(e,t,i){e=="reverse"&&this.updateOrder()}};customElements.get(h)==null&&customElements.define(h,d);export{b as ATTRIBUTENAME_ACTIVE,f as ATTRIBUTENAME_ENTRY,E as ATTRIBUTENAME_REVERSED,g as ATTRIBUTENAME_TIMESTAMP,d as ActionHistoryElement};
